# frozen_string_literal: true

class <%= name.singularize.camelcase %>Worker < Osbourne::WorkerBase

  worker_config topics: %w[<%= topic.join(" ") %>] #, max_batch_size: 10, max_wait: 10

  def process(message)
    puts message.raw_body    # This will always be a string, representing the entirety of the message
    puts message.parsed_body # If the message came from a SNS broadcast,
                             #   as opposed to a direct SQS message, it will come from here 
    puts message.topic       # The topic this message was published to.
                             #   Useful if this worker subscribes to more than one topic
    puts message.id          # The UUID for this message. Useful for validating if this is
                             #   the first time it has been processed 
  end

  # class << self
  #   # override this to set how many times a message will be retried before
  #   # being redirected to the dead letter queue (if enabled)
  #   def max_retry_count
  #   end

  #   # override this to set the worker's dead letter queue name
  #   def dead_letter_queue_name
  #   end

  #   # override this to `false` to disable the dead letter queu for this worker
  #   def dead_letter_queue
  #   end

  #   # override this to set the worker queue name
  #   def queue_name
  #   end
  # end
end
